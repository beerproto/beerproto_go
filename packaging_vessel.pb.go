//*
// BeerProto
//
// Another beer format, written in protocol buffer.
//
// Copyright (c) 2020 Ross Merrigan

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: beerproto/v1/packaging_vessel.proto

package beerprotov1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PackagingVesselUnit int32

const (
	PackagingVesselUnit_PACKAGING_VESSEL_UNIT_UNSPECIFIED PackagingVesselUnit = 0
	// keg
	PackagingVesselUnit_PACKAGING_VESSEL_UNIT_KEG PackagingVesselUnit = 1
	// bottle
	PackagingVesselUnit_PACKAGING_VESSEL_UNIT_BOTTLE PackagingVesselUnit = 2
	// cask
	PackagingVesselUnit_PACKAGING_VESSEL_UNIT_CASK PackagingVesselUnit = 3
	// tank
	PackagingVesselUnit_PACKAGING_VESSEL_UNIT_TANK PackagingVesselUnit = 4
	// firkin
	PackagingVesselUnit_PACKAGING_VESSEL_UNIT_FIRKIN PackagingVesselUnit = 5
	// other
	PackagingVesselUnit_PACKAGING_VESSEL_UNIT_OTHER PackagingVesselUnit = 6
	// can
	PackagingVesselUnit_PACKAGING_VESSEL_UNIT_CAN PackagingVesselUnit = 7
)

// Enum value maps for PackagingVesselUnit.
var (
	PackagingVesselUnit_name = map[int32]string{
		0: "PACKAGING_VESSEL_UNIT_UNSPECIFIED",
		1: "PACKAGING_VESSEL_UNIT_KEG",
		2: "PACKAGING_VESSEL_UNIT_BOTTLE",
		3: "PACKAGING_VESSEL_UNIT_CASK",
		4: "PACKAGING_VESSEL_UNIT_TANK",
		5: "PACKAGING_VESSEL_UNIT_FIRKIN",
		6: "PACKAGING_VESSEL_UNIT_OTHER",
		7: "PACKAGING_VESSEL_UNIT_CAN",
	}
	PackagingVesselUnit_value = map[string]int32{
		"PACKAGING_VESSEL_UNIT_UNSPECIFIED": 0,
		"PACKAGING_VESSEL_UNIT_KEG":         1,
		"PACKAGING_VESSEL_UNIT_BOTTLE":      2,
		"PACKAGING_VESSEL_UNIT_CASK":        3,
		"PACKAGING_VESSEL_UNIT_TANK":        4,
		"PACKAGING_VESSEL_UNIT_FIRKIN":      5,
		"PACKAGING_VESSEL_UNIT_OTHER":       6,
		"PACKAGING_VESSEL_UNIT_CAN":         7,
	}
)

func (x PackagingVesselUnit) Enum() *PackagingVesselUnit {
	p := new(PackagingVesselUnit)
	*p = x
	return p
}

func (x PackagingVesselUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackagingVesselUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_beerproto_v1_packaging_vessel_proto_enumTypes[0].Descriptor()
}

func (PackagingVesselUnit) Type() protoreflect.EnumType {
	return &file_beerproto_v1_packaging_vessel_proto_enumTypes[0]
}

func (x PackagingVesselUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackagingVesselUnit.Descriptor instead.
func (PackagingVesselUnit) EnumDescriptor() ([]byte, []int) {
	return file_beerproto_v1_packaging_vessel_proto_rawDescGZIP(), []int{0}
}

// PackagingVesselType - a per vessel representation of a packaging process
type PackagingVesselType struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	Id               string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type             PackagingVesselUnit     `protobuf:"varint,2,opt,name=type,proto3,enum=beerproto.v1.PackagingVesselUnit" json:"type,omitempty"`
	StartGravity     *GravityType            `protobuf:"bytes,3,opt,name=start_gravity,json=startGravity,proto3" json:"start_gravity,omitempty"`
	Name             string                  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	PackageDate      string                  `protobuf:"bytes,5,opt,name=package_date,json=packageDate,proto3" json:"package_date,omitempty"`
	StepTime         *TimeType               `protobuf:"bytes,6,opt,name=step_time,json=stepTime,proto3" json:"step_time,omitempty"`
	EndGravity       *GravityType            `protobuf:"bytes,7,opt,name=end_gravity,json=endGravity,proto3" json:"end_gravity,omitempty"`
	VesselVolume     *VolumeType             `protobuf:"bytes,8,opt,name=vessel_volume,json=vesselVolume,proto3" json:"vessel_volume,omitempty"`
	VesselQuantity   float64                 `protobuf:"fixed64,9,opt,name=vessel_quantity,json=vesselQuantity,proto3" json:"vessel_quantity,omitempty"`
	Description      string                  `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	StartPh          *AcidityType            `protobuf:"bytes,11,opt,name=start_ph,json=startPh,proto3" json:"start_ph,omitempty"`
	Carbonation      float64                 `protobuf:"fixed64,12,opt,name=carbonation,proto3" json:"carbonation,omitempty"`
	StartTemperature *TemperatureType        `protobuf:"bytes,13,opt,name=start_temperature,json=startTemperature,proto3" json:"start_temperature,omitempty"`
	EndPh            *AcidityType            `protobuf:"bytes,14,opt,name=end_ph,json=endPh,proto3" json:"end_ph,omitempty"`
	EndTemperature   *TemperatureType        `protobuf:"bytes,15,opt,name=end_temperature,json=endTemperature,proto3" json:"end_temperature,omitempty"`
	Graphics         []*PackagingGraphicType `protobuf:"bytes,16,rep,name=graphics,proto3" json:"graphics,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PackagingVesselType) Reset() {
	*x = PackagingVesselType{}
	mi := &file_beerproto_v1_packaging_vessel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackagingVesselType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackagingVesselType) ProtoMessage() {}

func (x *PackagingVesselType) ProtoReflect() protoreflect.Message {
	mi := &file_beerproto_v1_packaging_vessel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackagingVesselType.ProtoReflect.Descriptor instead.
func (*PackagingVesselType) Descriptor() ([]byte, []int) {
	return file_beerproto_v1_packaging_vessel_proto_rawDescGZIP(), []int{0}
}

func (x *PackagingVesselType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PackagingVesselType) GetType() PackagingVesselUnit {
	if x != nil {
		return x.Type
	}
	return PackagingVesselUnit_PACKAGING_VESSEL_UNIT_UNSPECIFIED
}

func (x *PackagingVesselType) GetStartGravity() *GravityType {
	if x != nil {
		return x.StartGravity
	}
	return nil
}

func (x *PackagingVesselType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PackagingVesselType) GetPackageDate() string {
	if x != nil {
		return x.PackageDate
	}
	return ""
}

func (x *PackagingVesselType) GetStepTime() *TimeType {
	if x != nil {
		return x.StepTime
	}
	return nil
}

func (x *PackagingVesselType) GetEndGravity() *GravityType {
	if x != nil {
		return x.EndGravity
	}
	return nil
}

func (x *PackagingVesselType) GetVesselVolume() *VolumeType {
	if x != nil {
		return x.VesselVolume
	}
	return nil
}

func (x *PackagingVesselType) GetVesselQuantity() float64 {
	if x != nil {
		return x.VesselQuantity
	}
	return 0
}

func (x *PackagingVesselType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PackagingVesselType) GetStartPh() *AcidityType {
	if x != nil {
		return x.StartPh
	}
	return nil
}

func (x *PackagingVesselType) GetCarbonation() float64 {
	if x != nil {
		return x.Carbonation
	}
	return 0
}

func (x *PackagingVesselType) GetStartTemperature() *TemperatureType {
	if x != nil {
		return x.StartTemperature
	}
	return nil
}

func (x *PackagingVesselType) GetEndPh() *AcidityType {
	if x != nil {
		return x.EndPh
	}
	return nil
}

func (x *PackagingVesselType) GetEndTemperature() *TemperatureType {
	if x != nil {
		return x.EndTemperature
	}
	return nil
}

func (x *PackagingVesselType) GetGraphics() []*PackagingGraphicType {
	if x != nil {
		return x.Graphics
	}
	return nil
}

var File_beerproto_v1_packaging_vessel_proto protoreflect.FileDescriptor

const file_beerproto_v1_packaging_vessel_proto_rawDesc = "" +
	"\n" +
	"#beerproto/v1/packaging_vessel.proto\x12\fbeerproto.v1\x1a$beerproto/v1/measureable_units.proto\x1a$beerproto/v1/packaging_graphic.proto\x1a\x1bbuf/validate/validate.proto\"\xc5\x06\n" +
	"\x13PackagingVesselType\x12\x1b\n" +
	"\x02id\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\x02id\x125\n" +
	"\x04type\x18\x02 \x01(\x0e2!.beerproto.v1.PackagingVesselUnitR\x04type\x12>\n" +
	"\rstart_gravity\x18\x03 \x01(\v2\x19.beerproto.v1.GravityTypeR\fstartGravity\x12\x1e\n" +
	"\x04name\x18\x04 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\x04name\x12!\n" +
	"\fpackage_date\x18\x05 \x01(\tR\vpackageDate\x123\n" +
	"\tstep_time\x18\x06 \x01(\v2\x16.beerproto.v1.TimeTypeR\bstepTime\x12:\n" +
	"\vend_gravity\x18\a \x01(\v2\x19.beerproto.v1.GravityTypeR\n" +
	"endGravity\x12=\n" +
	"\rvessel_volume\x18\b \x01(\v2\x18.beerproto.v1.VolumeTypeR\fvesselVolume\x12'\n" +
	"\x0fvessel_quantity\x18\t \x01(\x01R\x0evesselQuantity\x12 \n" +
	"\vdescription\x18\n" +
	" \x01(\tR\vdescription\x124\n" +
	"\bstart_ph\x18\v \x01(\v2\x19.beerproto.v1.AcidityTypeR\astartPh\x12 \n" +
	"\vcarbonation\x18\f \x01(\x01R\vcarbonation\x12J\n" +
	"\x11start_temperature\x18\r \x01(\v2\x1d.beerproto.v1.TemperatureTypeR\x10startTemperature\x120\n" +
	"\x06end_ph\x18\x0e \x01(\v2\x19.beerproto.v1.AcidityTypeR\x05endPh\x12F\n" +
	"\x0fend_temperature\x18\x0f \x01(\v2\x1d.beerproto.v1.TemperatureTypeR\x0eendTemperature\x12>\n" +
	"\bgraphics\x18\x10 \x03(\v2\".beerproto.v1.PackagingGraphicTypeR\bgraphics*\x9f\x02\n" +
	"\x13PackagingVesselUnit\x12%\n" +
	"!PACKAGING_VESSEL_UNIT_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19PACKAGING_VESSEL_UNIT_KEG\x10\x01\x12 \n" +
	"\x1cPACKAGING_VESSEL_UNIT_BOTTLE\x10\x02\x12\x1e\n" +
	"\x1aPACKAGING_VESSEL_UNIT_CASK\x10\x03\x12\x1e\n" +
	"\x1aPACKAGING_VESSEL_UNIT_TANK\x10\x04\x12 \n" +
	"\x1cPACKAGING_VESSEL_UNIT_FIRKIN\x10\x05\x12\x1f\n" +
	"\x1bPACKAGING_VESSEL_UNIT_OTHER\x10\x06\x12\x1d\n" +
	"\x19PACKAGING_VESSEL_UNIT_CAN\x10\aB\xb5\x01\n" +
	"\x10com.beerproto.v1B\x14PackagingVesselProtoP\x01Z:github.com/beerproto/beerproto_go/beerproto/v1;beerprotov1\xa2\x02\x03BXX\xaa\x02\fBeerproto.V1\xca\x02\fBeerproto\\V1\xe2\x02\x18Beerproto\\V1\\GPBMetadata\xea\x02\rBeerproto::V1b\x06proto3"

var (
	file_beerproto_v1_packaging_vessel_proto_rawDescOnce sync.Once
	file_beerproto_v1_packaging_vessel_proto_rawDescData []byte
)

func file_beerproto_v1_packaging_vessel_proto_rawDescGZIP() []byte {
	file_beerproto_v1_packaging_vessel_proto_rawDescOnce.Do(func() {
		file_beerproto_v1_packaging_vessel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_beerproto_v1_packaging_vessel_proto_rawDesc), len(file_beerproto_v1_packaging_vessel_proto_rawDesc)))
	})
	return file_beerproto_v1_packaging_vessel_proto_rawDescData
}

var file_beerproto_v1_packaging_vessel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_beerproto_v1_packaging_vessel_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_beerproto_v1_packaging_vessel_proto_goTypes = []any{
	(PackagingVesselUnit)(0),     // 0: beerproto.v1.PackagingVesselUnit
	(*PackagingVesselType)(nil),  // 1: beerproto.v1.PackagingVesselType
	(*GravityType)(nil),          // 2: beerproto.v1.GravityType
	(*TimeType)(nil),             // 3: beerproto.v1.TimeType
	(*VolumeType)(nil),           // 4: beerproto.v1.VolumeType
	(*AcidityType)(nil),          // 5: beerproto.v1.AcidityType
	(*TemperatureType)(nil),      // 6: beerproto.v1.TemperatureType
	(*PackagingGraphicType)(nil), // 7: beerproto.v1.PackagingGraphicType
}
var file_beerproto_v1_packaging_vessel_proto_depIdxs = []int32{
	0,  // 0: beerproto.v1.PackagingVesselType.type:type_name -> beerproto.v1.PackagingVesselUnit
	2,  // 1: beerproto.v1.PackagingVesselType.start_gravity:type_name -> beerproto.v1.GravityType
	3,  // 2: beerproto.v1.PackagingVesselType.step_time:type_name -> beerproto.v1.TimeType
	2,  // 3: beerproto.v1.PackagingVesselType.end_gravity:type_name -> beerproto.v1.GravityType
	4,  // 4: beerproto.v1.PackagingVesselType.vessel_volume:type_name -> beerproto.v1.VolumeType
	5,  // 5: beerproto.v1.PackagingVesselType.start_ph:type_name -> beerproto.v1.AcidityType
	6,  // 6: beerproto.v1.PackagingVesselType.start_temperature:type_name -> beerproto.v1.TemperatureType
	5,  // 7: beerproto.v1.PackagingVesselType.end_ph:type_name -> beerproto.v1.AcidityType
	6,  // 8: beerproto.v1.PackagingVesselType.end_temperature:type_name -> beerproto.v1.TemperatureType
	7,  // 9: beerproto.v1.PackagingVesselType.graphics:type_name -> beerproto.v1.PackagingGraphicType
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_beerproto_v1_packaging_vessel_proto_init() }
func file_beerproto_v1_packaging_vessel_proto_init() {
	if File_beerproto_v1_packaging_vessel_proto != nil {
		return
	}
	file_beerproto_v1_measureable_units_proto_init()
	file_beerproto_v1_packaging_graphic_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_beerproto_v1_packaging_vessel_proto_rawDesc), len(file_beerproto_v1_packaging_vessel_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_beerproto_v1_packaging_vessel_proto_goTypes,
		DependencyIndexes: file_beerproto_v1_packaging_vessel_proto_depIdxs,
		EnumInfos:         file_beerproto_v1_packaging_vessel_proto_enumTypes,
		MessageInfos:      file_beerproto_v1_packaging_vessel_proto_msgTypes,
	}.Build()
	File_beerproto_v1_packaging_vessel_proto = out.File
	file_beerproto_v1_packaging_vessel_proto_goTypes = nil
	file_beerproto_v1_packaging_vessel_proto_depIdxs = nil
}
