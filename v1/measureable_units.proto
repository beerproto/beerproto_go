/**
 * BeerProto
 *
 * Another beer format, written in protocol buffer.
 *
 * Copyright (c) 2020 Ross Merrigan
 */
syntax = "proto3";

package beerproto.v1;

message VolumeType{
  double value = 1;
  VolumeUnit unit = 2;
}

  enum VolumeUnit{
    VOLUME_UNIT_UNSPECIFIED = 0;
    // ml
    VOLUME_UNIT_ML = 1;
    // l
    VOLUME_UNIT_L = 2;
    // tsp
    VOLUME_UNIT_TSP = 3;
    // tbsp
    VOLUME_UNIT_TBSP = 4;
    // floz
    VOLUME_UNIT_FLOZ = 5;
    // cup
    VOLUME_UNIT_CUP = 6;
    // pt
    VOLUME_UNIT_PT = 7;
    // qt
    VOLUME_UNIT_QT = 8;
    // gal
    VOLUME_UNIT_GAL = 9;
    // bbl
    VOLUME_UNIT_BBL = 10;
    // ifloz
    VOLUME_UNIT_IFOZ = 11;
    // ipt
    VOLUME_UNIT_IPT = 12;
    // iqt
    VOLUME_UNIT_IQT = 13;
    // igal
    VOLUME_UNIT_IGAL = 14;
    // ibbl
    VOLUME_UNIT_IBBL = 15;
  }

message MassType{
  double value = 1;
  MassUnit unit = 2;
}

enum MassUnit{
  MASS_UNIT_UNSPECIFIED = 0;
  // mg
  MASS_UNIT_MG = 1;
  // g
  MASS_UNIT_G = 2;
  // kg
  MASS_UNIT_KG = 3;
  // lb
  MASS_UNIT_LB = 4;
  // oz
  MASS_UNIT_OZ = 5;
}


// Diastatic power is a measurement of malted grains enzymatic content. A value of 35 Lintner is needed to self convert, while a value of 100 or more is desirable for base malts
message DiastaticPowerType{
  double value = 1;
  DiastaticPowerUnit unit = 2;
}

enum DiastaticPowerUnit{
  DIASTATIC_POWER_UNIT_UNSPECIFIED = 0;
  // Lintner
  DIASTATIC_POWER_UNIT_LINTNER = 1;
  // Windischâ€“Kolbach
  DIASTATIC_POWER_UNIT_WK = 2;
}


message TemperatureType{
  double value = 1;
  TemperatureUnit unit = 2;
}

enum TemperatureUnit {
    TEMPERATURE_UNIT_UNSPECIFIED = 0;
    TEMPERATURE_UNIT_C = 1;
    TEMPERATURE_UNIT_F = 2;
}


message AcidityType{
  double value = 1;
  AcidityUnit unit = 2;
}

enum AcidityUnit{
    ACIDITY_UNIT_UNSPECIFIED = 0;
    ACIDITY_UNIT_PH = 1;
}


message TimeType{
  int64 value = 1;
  TimeUnit unit = 2;
}

 enum TimeUnit {
    TIME_UNIT_UNSPECIFIED = 0;
    // sec
    TIME_UNIT_SEC = 1;
    // min
    TIME_UNIT_MIN = 2;
    // hr
    TIME_UNIT_HR = 3;
    // day
    TIME_UNIT_DAY = 4;
    // week
    TIME_UNIT_WEEK = 5;
  }

// ColorType supports both grain color properties, such as Lovibond, and wort color properties such as SRM and EBC
message ColorType{
  double value = 1;
  ColorUnit unit = 2;
}

enum ColorUnit {
  COLOR_UNIT_UNSPECIFIED = 0;
  // EBC
  COLOR_UNIT_EBC = 1;
  // Lovi
  COLOR_UNIT_LOVI = 2;
  // SRM
  COLOR_UNIT_SRM = 3;
}


message CarbonationType {
  double value = 1;
  CarbonationUnit unit = 2;
}

enum CarbonationUnit {
  CARBONATION_UNIT_UNSPECIFIED = 0;
  // vols
  CARBONATION_UNIT_VOLS = 1;
  // g/l
  CARBONATION_UNIT_GL = 2;
}


message BitternessType{
  double value = 1;
  BitternessUnit unit = 2;
}

enum BitternessUnit{
  BITTERNESS_UNIT_UNSPECIFIED = 0;
  // IBUs
  BITTERNESS_UNIT_IBUS = 1;
}

// Gravity refers to the both the measurements of percent of sugar content, ie plato and brix, as well as relative density ie specific gravity
message GravityType {
  double value = 1;
  GravityUnit unit = 2;
}

enum GravityUnit {
    GRAVITY_UNIT_UNSPECIFIED = 0;
    // sg
    GRAVITY_UNIT_SG = 1;
    // plato
    GRAVITY_UNIT_PLATO = 2;
    // brix
    GRAVITY_UNIT_BRIX = 3;
}


message SpecificHeatType{
  double value = 1;
  SpecificHeatUnit unit = 2;
}

enum SpecificHeatUnit{
  SPECIFIC_HEAT_UNIT_UNSPECIFIED = 0;
  // Cal/(g C)
  SPECIFIC_HEAT_UNIT_CALGC = 1;
  // J/(kg K)
  SPECIFIC_HEAT_UNIT_JKGK = 2;
  // BTU/(lb F)
  SPECIFIC_HEAT_UNIT_BTULBF = 3;
}


message ConcentrationType{
  double value = 1;
  ConcentrationUnit unit = 2;
}

enum ConcentrationUnit{
  CONCENTRATION_UNIT_UNSPECIFIED = 0;
  // ppm
  CONCENTRATION_UNIT_PPM = 1;
  // ppb
  CONCENTRATION_UNIT_PPB = 2;
  // mg/l
  CONCENTRATION_UNIT_MGL = 3;
  // mg/100g
  CONCENTRATION_UNIT_MG100L = 4;
}


message SpecificVolumeType{
  double value = 1;
  SpecificVolumeUnit unit = 2;
}

enum SpecificVolumeUnit{
  SPECIFIC_VOLUME_UNIT_UNSPECIFIED = 0;
  // qt/lb
  SPECIFIC_VOLUME_UNIT_QTLB = 1;
  // gal/lb
  SPECIFIC_VOLUME_UNIT_GALLB = 2;
  // gal/oz
  SPECIFIC_VOLUME_UNIT_GALOZ = 3;
  // l/g
  SPECIFIC_VOLUME_UNIT_LG = 4;
  // l/kg
  SPECIFIC_VOLUME_UNIT_LKG = 5;
  // floz/oz
  SPECIFIC_VOLUME_UNIT_FLOZOZ = 6;
  // m^3/kg
  SPECIFIC_VOLUME_UNIT_M3KG = 7;
  // ft^3/lb
  SPECIFIC_VOLUME_UNIT_FT3LB = 8;
}

// UnitType is used where unitless amounts are required, such as 1 apple, or 1 yeast packet
message UnitType {
  double value = 1;
  UnitUnit unit = 2;
}

enum UnitUnit {
  UNIT_UNIT_UNSPECIFIED = 0;
  // 1
  UNIT_UNIT_ONE = 1;
  // unit
  UNIT_UNIT_UNIT = 2;
  // each
  UNIT_UNIT_EACH = 3;
  // dimensionless
  UNIT_UNIT_DIMENSIONLESS = 4;
  // pkg
  UNIT_UNIT_PKG = 5;
}

message PercentType{
  double value = 1;
  PercentUnit unit = 2;
}

enum PercentUnit{
  PERCENT_UNIT_UNSPECIFIED = 0;
  // %
  PERCENT_UNIT_PERCENT_SIGN = 1;
}

message ViscosityType{
  double value = 1;
  ViscosityUnit unit = 2;
}

enum ViscosityUnit {
  VISCOSITY_UNIT_UNSPECIFIED = 0;
  // cP
  VISCOSITY_UNIT_CP = 1;
  // mPa-s
  VISCOSITY_UNIT_MPAS = 2;
}

message CarbonationRangeType{
  CarbonationType minimum = 1;
  CarbonationType maximum = 2;
}

message BitternessRangeType{
  BitternessType minimum = 1;
  BitternessType maximum = 2;
}

message TemperatureRangeType{
  TemperatureType minimum = 1;
  TemperatureType maximum = 2;
}

message ColorRangeType{
  ColorType minimum = 1;
  ColorType maximum = 2;
}

message GravityRangeType{
  GravityType minimum = 1;
  GravityType maximum = 2;
}

message PercentRangeType{
  PercentType minimum = 1;
  PercentType maximum = 2;
}

message TimeRangeType{
  TimeType minimum = 1;
  TimeType maximum = 2;
}

message ViscosityRangeType{
  ViscosityType minimum = 1;
  ViscosityType maximum = 2;
}

message DiastaticPowerRangeType{
  DiastaticPowerType minimum = 1;
  DiastaticPowerType maximum = 2;
}

message SpecificVolumeRangeType{
  SpecificVolumeType minimum = 1;
  SpecificVolumeType maximum = 2;
}

message AcidityRangeType{
  AcidityType minimum = 1;
  AcidityType maximum = 2;
}

message ConcentrationRangeType{
  ConcentrationType minimum = 1;
  ConcentrationType maximum = 2;
}

