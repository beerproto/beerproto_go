//*
// BeerProto
//
// Another beer format, written in protocol buffer.
//
// Copyright (c) 2020 Ross Merrigan

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: beerproto/v1/packaging.proto

package beerprotov1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the procedure for packaging your beverage
type PackagingProcedureType struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PackagedVolume   *VolumeType            `protobuf:"bytes,3,opt,name=packaged_volume,json=packagedVolume,proto3" json:"packaged_volume,omitempty"`
	Description      string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Notes            string                 `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	PackagingVessels []*PackagingVesselType `protobuf:"bytes,6,rep,name=packaging_vessels,json=packagingVessels,proto3" json:"packaging_vessels,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PackagingProcedureType) Reset() {
	*x = PackagingProcedureType{}
	mi := &file_beerproto_v1_packaging_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackagingProcedureType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackagingProcedureType) ProtoMessage() {}

func (x *PackagingProcedureType) ProtoReflect() protoreflect.Message {
	mi := &file_beerproto_v1_packaging_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackagingProcedureType.ProtoReflect.Descriptor instead.
func (*PackagingProcedureType) Descriptor() ([]byte, []int) {
	return file_beerproto_v1_packaging_proto_rawDescGZIP(), []int{0}
}

func (x *PackagingProcedureType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PackagingProcedureType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PackagingProcedureType) GetPackagedVolume() *VolumeType {
	if x != nil {
		return x.PackagedVolume
	}
	return nil
}

func (x *PackagingProcedureType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PackagingProcedureType) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *PackagingProcedureType) GetPackagingVessels() []*PackagingVesselType {
	if x != nil {
		return x.PackagingVessels
	}
	return nil
}

var File_beerproto_v1_packaging_proto protoreflect.FileDescriptor

const file_beerproto_v1_packaging_proto_rawDesc = "" +
	"\n" +
	"\x1cbeerproto/v1/packaging.proto\x12\fbeerproto.v1\x1a$beerproto/v1/measureable_units.proto\x1a#beerproto/v1/packaging_vessel.proto\x1a\x1bbuf/validate/validate.proto\"\xa0\x02\n" +
	"\x16PackagingProcedureType\x12\x1b\n" +
	"\x02id\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\x02id\x12\x1e\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\x04name\x12A\n" +
	"\x0fpackaged_volume\x18\x03 \x01(\v2\x18.beerproto.v1.VolumeTypeR\x0epackagedVolume\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x14\n" +
	"\x05notes\x18\x05 \x01(\tR\x05notes\x12N\n" +
	"\x11packaging_vessels\x18\x06 \x03(\v2!.beerproto.v1.PackagingVesselTypeR\x10packagingVesselsB\xaf\x01\n" +
	"\x10com.beerproto.v1B\x0ePackagingProtoP\x01Z:github.com/beerproto/beerproto_go/beerproto/v1;beerprotov1\xa2\x02\x03BXX\xaa\x02\fBeerproto.V1\xca\x02\fBeerproto\\V1\xe2\x02\x18Beerproto\\V1\\GPBMetadata\xea\x02\rBeerproto::V1b\x06proto3"

var (
	file_beerproto_v1_packaging_proto_rawDescOnce sync.Once
	file_beerproto_v1_packaging_proto_rawDescData []byte
)

func file_beerproto_v1_packaging_proto_rawDescGZIP() []byte {
	file_beerproto_v1_packaging_proto_rawDescOnce.Do(func() {
		file_beerproto_v1_packaging_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_beerproto_v1_packaging_proto_rawDesc), len(file_beerproto_v1_packaging_proto_rawDesc)))
	})
	return file_beerproto_v1_packaging_proto_rawDescData
}

var file_beerproto_v1_packaging_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_beerproto_v1_packaging_proto_goTypes = []any{
	(*PackagingProcedureType)(nil), // 0: beerproto.v1.PackagingProcedureType
	(*VolumeType)(nil),             // 1: beerproto.v1.VolumeType
	(*PackagingVesselType)(nil),    // 2: beerproto.v1.PackagingVesselType
}
var file_beerproto_v1_packaging_proto_depIdxs = []int32{
	1, // 0: beerproto.v1.PackagingProcedureType.packaged_volume:type_name -> beerproto.v1.VolumeType
	2, // 1: beerproto.v1.PackagingProcedureType.packaging_vessels:type_name -> beerproto.v1.PackagingVesselType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_beerproto_v1_packaging_proto_init() }
func file_beerproto_v1_packaging_proto_init() {
	if File_beerproto_v1_packaging_proto != nil {
		return
	}
	file_beerproto_v1_measureable_units_proto_init()
	file_beerproto_v1_packaging_vessel_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_beerproto_v1_packaging_proto_rawDesc), len(file_beerproto_v1_packaging_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_beerproto_v1_packaging_proto_goTypes,
		DependencyIndexes: file_beerproto_v1_packaging_proto_depIdxs,
		MessageInfos:      file_beerproto_v1_packaging_proto_msgTypes,
	}.Build()
	File_beerproto_v1_packaging_proto = out.File
	file_beerproto_v1_packaging_proto_goTypes = nil
	file_beerproto_v1_packaging_proto_depIdxs = nil
}
